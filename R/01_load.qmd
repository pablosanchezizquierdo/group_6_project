---
title: "01_load"
format: html
editor: visual
---

# Load raw data from the "Genes" dataset and join all datasets:

The original data is structured in the following manner: - The "Genes" folder contains a number of excel files. - Each excel file corresponds to a persistant organic pollutant (POP) compound. - Each excel file contains a number of sheets. - Each excel sheet corresponds to a gene targeting bioremediation of said POP. - Each excel sheet contains 28 variables and a number of observations.

```{r}
# Define a function to read all sheets from a given Excel file
read_excel_sheets <- function(file_path) {
  sheets <- excel_sheets(file_path)
  map(sheets, ~ read_excel(file_path, sheet = .x))
}

# Define the folder path where your Excel files are located
folder_path <- "../data/_raw/Genes"
excel_files <- list.files(folder_path, pattern = "\\.xlsx$", full.names = TRUE)

# Read all sheets from all Excel files and remove the "PMID" column from each sheet
all_sheets <- map(excel_files, read_excel_sheets) |> 
  map(~ lapply(.x, function(df) df[,-which(names(df) == "PMID")])) |> 
  flatten_df()

all_sheets <- all_sheets |> distinct()

```

# Save data into a single table:

```{r}
# Define the path for the output .tsv file
output_file_path <- "../data/all_sheets.tsv"

# Save the 'all_sheets' data frame to a .tsv file
write_delim(all_sheets, file = output_file_path, delim = "\t", col_names = TRUE)

# Verify that the file has been saved
if (file.exists(output_file_path)) {
  cat("Data has been saved to", output_file_path, "\n")
} else {
  cat("Failed to save the data to", output_file_path, "\n")
}
```
